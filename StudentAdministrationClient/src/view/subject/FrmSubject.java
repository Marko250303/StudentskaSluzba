/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.subject;

import domain.Semester;
import domain.Subject;
import java.awt.HeadlessException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logic.ClientController;
import view.FormMode;
import view.FrmMain;

/**
 *
 * @author Mare
 */
public class FrmSubject extends javax.swing.JDialog {
    
    FormMode mode=FormMode.KREIRAJ;
    
    Subject subject;

    /**
     * Creates new form FrmSubject
     */
    public FrmSubject(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        populateForm(subject,mode);
    }

    public FrmSubject(FrmViewSubjects aThis, boolean modal, FormMode formMode,Subject s) {
        super(aThis, modal);
        initComponents();
        
        mode=formMode;
        
        this.subject=s;
        
        populateForm(subject, mode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblSubjectName = new javax.swing.JLabel();
        txtSubjectName = new javax.swing.JTextField();
        txtESPB = new javax.swing.JTextField();
        lblESPB = new javax.swing.JLabel();
        lblSemester = new javax.swing.JLabel();
        cbSemester = new javax.swing.JComboBox<>();
        btnCreateSubject = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblID.setText("ID:");

        lblSubjectName.setText("Naziv:");

        lblESPB.setText("ESPB:");

        lblSemester.setText("Semestar:");

        btnCreateSubject.setText("Kreiraj");
        btnCreateSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateSubjectActionPerformed(evt);
            }
        });

        btnCancel.setText("Otkazi");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSemester, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCreateSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 86, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblESPB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubjectName, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID)
                            .addComponent(txtESPB)
                            .addComponent(txtSubjectName))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSubjectName)
                    .addComponent(txtSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblESPB)
                    .addComponent(txtESPB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemester)
                    .addComponent(cbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateSubjectActionPerformed
        String subjectName=txtSubjectName.getText().trim();
        
        
        if(!validateSubject(subjectName)){
            JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira predmet", "GRESKA KOD KREIRANJA", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int espb=Integer.parseInt(txtESPB.getText().trim());
        Semester semester=(Semester) cbSemester.getSelectedItem();
        
        Subject subject=new Subject(null, subjectName, espb, semester);
        
        try {
            Subject createdSubject=ClientController.getInstance().createSubject(subject);
            
            JOptionPane.showMessageDialog(this, "Sistem je kreirao predmet", "PREDMET JE KREIRAN", JOptionPane.INFORMATION_MESSAGE);
            
            int choice=JOptionPane.showConfirmDialog(this, "Zelite li dakreirate jos predmeta?", "NOVO KREIRANJE", JOptionPane.YES_NO_OPTION);
            
            if(choice==JOptionPane.YES_OPTION){
                txtSubjectName.setText("");
                txtESPB.setText("");
                cbSemester.setSelectedIndex(-1);
            } else if(choice==JOptionPane.NO_OPTION){
                this.dispose();
            }
            
        } catch (Exception ex) {
            Logger.getLogger(FrmSubject.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira predmet", "GRESKA PRI KREIRANJU PREDMATA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCreateSubjectActionPerformed

    public boolean validateSubject(String subjectName) throws HeadlessException {
        if (subjectName.equals("")) {
            JOptionPane.showMessageDialog(this, "Naziv predmeta ne sme da bude prazan", "GRESKA KOD NAZIVA", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (subjectName.length()<3 || subjectName.length()>20) {
            JOptionPane.showMessageDialog(this, "Naziv predmeta mora da ima izmedju 3 i 20 znakova", "GRESKA KOD NAZIVA", JOptionPane.ERROR_MESSAGE);
            return true;
        }
//        if (subjectName.matches(".*\\d.*")) {
//            JOptionPane.showMessageDialog(this, "Naziv ne sme da sadrzi brojeve", "Greska kod imena", JOptionPane.ERROR_MESSAGE);
//            return true;
//        }
//        if (txtESPB.getText().trim().matches("^[a-zA-Z]*$")) {
//            JOptionPane.showMessageDialog(this, "Polje ESPB moa da bude broj", "Greska kod imena", JOptionPane.ERROR_MESSAGE);
//            return true;
//        }
        if (cbSemester.getSelectedIndex()<0) {
            JOptionPane.showMessageDialog(this, "Niste odabrali semestar", "Greska kod semestra", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        return false;
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCreateSubject;
    private javax.swing.JComboBox<Object> cbSemester;
    private javax.swing.JLabel lblESPB;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblSubjectName;
    private javax.swing.JTextField txtESPB;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtSubjectName;
    // End of variables declaration//GEN-END:variables

    private void populateForm(Subject subject, FormMode mode) {
        setLocationRelativeTo(null);
        
        Semester[] semesters=Semester.values();
        
        for (Semester semester : semesters) {
            cbSemester.addItem(semester);
        }
        
        switch (mode) {
            case KREIRAJ -> {
                setTitle("KREIRAJ PREDMET");
                
                lblID.setVisible(false);
                txtID.setVisible(false);
                
                cbSemester.setSelectedIndex(-1);
            }
            case PRIKAZI -> {
                setTitle("DETALJI PREDMETA");
                
                txtID.setText(String.valueOf(subject.getSubjectID()));
                txtSubjectName.setText(subject.getSubjectName());
                txtESPB.setText(String.valueOf(subject.getEsbp()));
                cbSemester.setSelectedItem(subject.getSemester());
                
                lblID.setVisible(true);
                txtID.setVisible(true);
                
                txtID.setEnabled(false);
                txtSubjectName.setEnabled(false);
                txtESPB.setEnabled(false);
                cbSemester.setEnabled(false);
                
                btnCreateSubject.setVisible(false);
            }
            default -> throw new AssertionError(mode.name());
            
        }
    }
}
